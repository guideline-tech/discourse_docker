# IMPORTANT: SET A SECRET PASSWORD in Postgres for the Discourse User
# TODO: change SOME_SECRET in this template

templates:
  - "templates/web.template.yml"
  - "templates/web.ratelimited.template.yml"

# while building, we need redis and postgresql to be available
links:
  - link:
      name: postgres
      alias: postgres
  - link:
      name: redis
      alias: redis

params:
  ## Which Git revision should this container use? (default: tests-passed)
  #version: tests-passed

env:
  LANG: en_US.UTF-8
  # DISCOURSE_DEFAULT_LOCALE: en

  ## How many concurrent web requests are supported? Depends on memory and CPU cores.
  ## will be set automatically by bootstrap based on detected CPUs, or you can override
  UNICORN_WORKERS: 2

  ## TODO: The domain name this Discourse instance will respond to
  DISCOURSE_HOSTNAME: 'discourse.guideline.io'

  ## Uncomment if you want the container to be started with the same
  ## hostname (-h option) as specified above (default "$hostname-$config")
  #DOCKER_USE_HOSTNAME: true

  ## TODO: List of comma delimited emails that will be made admin and developer
  ## on initial signup example 'user1@example.com,user2@example.com'
  DISCOURSE_DEVELOPER_EMAILS: 'eric@guideline.com'

  ## TODO: The SMTP mail server used to validate new accounts and send notifications
  # SMTP ADDRESS, username, and password are required
  # WARNING the char '#' in SMTP password can cause problems!
  DISCOURSE_SMTP_ADDRESS: smtp-relay.gmail.com
  DISCOURSE_SMTP_PORT: 587
  DISCOURSE_SMTP_USER_NAME:
  DISCOURSE_SMTP_PASSWORD:
  #DISCOURSE_SMTP_ENABLE_START_TLS: true           # (optional, default true)

  ## TODO: configure connectivity to the databases
  #DISCOURSE_DB_SOCKET: ''
  #DISCOURSE_DB_USERNAME: discourse
  #DISCOURSE_DB_PASSWORD: bJoE87FdtMr65A6HedUV45q6KmewZY8jsAwMJdBD
  DISCOURSE_DB_USERNAME: discourse
  DISCOURSE_DB_PASSWORD: fakestuff
  DISCOURSE_DB_HOST: postgres
  DISCOURSE_REDIS_HOST: redis

  ## The http or https CDN address for this Discourse instance (configured to pull)
  ## see https://meta.discourse.org/t/14857 for details
  #DISCOURSE_CDN_URL: https://discourse-cdn.example.com

#volumes:
#  - volume:
#      host: /var/discourse/shared/web-only
#      guest: /shared
#  - volume:
#      host: /var/discourse/shared/web-only/log/var-log
#      guest: /var/log

## Plugins go here
## see https://meta.discourse.org/t/19157 for details
hooks:
  after_code:
    - exec:
        cd: $home/plugins
        cmd:
          - git clone https://github.com/discourse/docker_manager.git
          - git clone https://github.com/discourse/discourse-solved.git
          - git clone https://github.com/discourse/discourse-voting.git
          - git clone https://github.com/discourse/discourse-assign.git
          - git clone https://github.com/discourse/discourse-chat-integration.git  ## new plugin!
          - git clone https://github.com/jonmbake/discourse-ldap-auth

## Remember, this is YAML syntax - you can only have one block with a name
run:
  - exec: echo "Beginning of custom commands"
  # cures an initialization issue
  - exec: echo "require 'excon'" > /var/www/discourse/config/initializers/011-excon_require.rb
  # emails won't send with default from field, set our own
  - exec: rails r "SiteSetting.notification_email='discourse+devops@guideline.com'"
  # get rid of uncatagorized
  - exec: rails r "SiteSetting.allow_uncategorized_topics=false"
  # no bootstrap mode .. does not seem to work
  #- exec: rails r "SiteSetting.bootstrap_mode_min_users=0"


  ## If you want to configure password login for root, uncomment and change:
  ## Use only one of the following lines:
  #- exec: /usr/sbin/usermod -p 'PASSWORD_HASH' root
  #- exec: /usr/sbin/usermod -p "$(mkpasswd -m sha-256 'RAW_PASSWORD')" root

  ## If you want to authorized additional users, uncomment and change:
  #- exec: ssh-import-id username
  #- exec: ssh-import-id anotherusername

#  - exec: echo "End of custom commands"
#  - exec: awk -F\# '{print $1;}' ~/.ssh/authorized_keys | awk 'BEGIN { print "Authorized SSH keys for this container:"; } NF>=2 {print $NF;}'
